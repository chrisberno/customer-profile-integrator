import * as React from "react";
import { TaskProfileConnectorContextProps, BaseTaskContextProps } from "../../../utils";
import { BadgeVariants } from "../../BaseBadge/BaseBadge.definitions";
/**
 * The size of the task
 * @typedef {"Small" | "Large" | "LargeSelected"} TaskListItem.TaskListItemSize
 * @since 2.0.0
 */
export type TaskListItemSize = "Small" | "Large" | "LargeSelected";
/**
 * Properties of TaskListItem.
 * @typedef TaskListItem.TaskListItemProps
 * @property {boolean} [visible] - Whether the task list item is visible or not.
 * @property {boolean} [selected] - Whether the task list item is selected or not.
 * @property {string} [selectedTaskSid] - Sid of the selected task.
 * @property {Function} [onSelected] - Callback when the task is selected.
 * @property {string | React.ReactNode} [icon] - Task list item icon.
 * @property {string} [iconColor] - Icon color.
 * @property {Array<React.ReactElement<any>>} [actions] - Override default accept or reject actions.
 * @property {React.ReactNode} [firstLine] - First line displayed in the task list item.
 * @property {React.ReactNode} [secondLine] - Second line displayed in the task list item.
 * @property {React.ReactNode} [extraInfo] - Additional info displayed in the task list item.
 * @property {boolean} [large] - Whether the item is large or not. If true, the lower area is displayed.
 * @property {TaskListItemSize} [itemSize] - Task list item size.
 * @property {DynamicContentStore.DynamicComponentChildren<TaskListItemChildrenProps>} [children] - children
 * @since 2.0.0
 */
export interface BaseTaskListItemProps {
    readonly visible?: boolean;
    readonly selected?: boolean;
    readonly selectedTaskSid?: string;
    readonly onSelected?: (taskSid: string) => void;
    readonly icon?: string | React.ReactNode;
    readonly iconColor?: string;
    readonly actions?: Array<React.ReactElement<any>>;
    readonly firstLine?: React.ReactNode;
    readonly secondLine?: React.ReactNode;
    readonly extraInfo?: React.ReactNode;
    readonly large?: boolean;
    readonly itemSize?: TaskListItemSize;
}
export interface BaseTaskListItemChildrenProps extends BaseTaskListItemProps, BaseTaskContextProps, TaskProfileConnectorContextProps {
    readonly Badge?: {
        children: number;
        variant: BadgeVariants;
    };
}
