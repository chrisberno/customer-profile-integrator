import { BaseITask, DynamicContentStore, TaskFilter, TaskFilterCallback } from "../../utils";
export interface BaseTaskListProps {
    selectedTaskSid?: string;
    compareFunction?: (a: BaseITask, b: BaseITask) => number;
    staticFilter?: TaskFilterCallback;
    filters?: Array<TaskFilter>;
    onFilterChange?: (filter: TaskFilter) => void;
    onTaskSelected?: (sid: string) => void;
    tasks?: Map<string, BaseITask>;
}
export declare enum TaskListChildrenKeys {
    contents = "contents",
    taskListFilter = "TaskListFilter"
}
export interface BaseTaskListState extends BaseTaskListProps {
    selectedFilter?: TaskFilter;
}
export declare const TaskListContext: import("react").Context<BaseTaskListState>;
export declare const taskListDisplayName = "TaskList";
export declare const taskListContentStore: DynamicContentStore<Partial<BaseTaskListProps>, TaskListChildrenKeys>;
export declare const orderedTaskList: BaseITask[];
