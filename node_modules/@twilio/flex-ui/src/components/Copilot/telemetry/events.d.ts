import { AiCopilotAssistApiReference } from "../../../core/FlexDataClient";
import { ITask } from "../../../models";
export declare enum FeatureType {
    AskCopilot = "AskCopilot",
    SuggestedResponse = "SuggestedResponse"
}
export declare enum FeedbackType {
    ThumbsUp = "ThumbsUp",
    ThumbsDown = "ThumbsDown"
}
export declare const emitFeedbackEvent: (type: FeedbackType, feature: FeatureType, copilotId: string, interactionSid: string, channelSid: string, task?: ITask, conversationSid?: string, references?: AiCopilotAssistApiReference[]) => void;
export declare const emitGenerationUsedEvent: (feature: FeatureType, copilotId: string, interactionSid: string, channelSid: string, task?: ITask, conversationSid?: string, references?: AiCopilotAssistApiReference[]) => void;
export declare const emitViewSourcesOpenedEvent: (feature: FeatureType, copilotId: string, interactionSid: string, channelSid: string, task?: ITask, conversationSid?: string, references?: AiCopilotAssistApiReference[]) => void;
export declare const trackEvent: (name: string, eventProperties: Record<string, any>) => void;
